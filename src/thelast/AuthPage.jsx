
// AuthPage.jsx
import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import axios from "axios";
import "./AuthPage.css";

const API_URL = "https://68578eda21f5d3463e557cff.mockapi.io/api/project/users";
const IMGBB_API_KEY = "d6181f1a9eb64f33667dbbd04be20254";

const AuthPage = () => {
  const [mode, setMode] = useState(null);
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [nickname, setNickname] = useState("");
  const [avatar, setAvatar] = useState(null);
  const [isLoading, setIsLoading] = useState(false);
  const navigate = useNavigate();

  const uploadAvatarToImgbb = async (file) => {
    const formData = new FormData();
    formData.append("image", file);

    const { data } = await axios.post(
      `https://api.imgbb.com/1/upload?key=${IMGBB_API_KEY}`,
      formData
    );

    return data.data.url;
  };

const handleAuth = async (e) => {
  e.preventDefault();
  setIsLoading(true);

  try {
    if (!email || !password) throw new Error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è");

    const { data: users } = await axios.get(API_URL);
    const existingUser = users.find((user) => user.email === email);

    if (mode === "signup") {
      if (existingUser) throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ.");

      if (password !== confirmPassword) throw new Error("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç");
      if (!nickname) throw new Error("–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º");
      if (password.length < 8) throw new Error("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤");

      let avatarUrl = null;
      if (avatar) {
        avatarUrl = await uploadAvatarToImgbb(avatar);
      }

      const userData = {
        email,
        nickname,
        password,
        avatar: avatarUrl,
        createdAt: new Date().toISOString(),
      };

      const response = await axios.post(API_URL, userData);
      localStorage.setItem("user", JSON.stringify(response.data));
      localStorage.setItem("auth", "true");
      if (avatarUrl) localStorage.setItem("avatar", avatarUrl);
      navigate("/", { replace: true });

    } else if (mode === "login") {
      if (!existingUser) throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.");
      if (existingUser.password !== password) throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å");

      localStorage.setItem("user", JSON.stringify(existingUser));
      localStorage.setItem("auth", "true");
      if (existingUser.avatar) localStorage.setItem("avatar", existingUser.avatar);
      navigate("/", { replace: true });
    }

  } catch (err) {
    alert(err.message);
    localStorage.removeItem("auth");
  } finally {
    setIsLoading(false);
  }
};


  const handleSocialLogin = (provider) => {
    alert(`–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ ${provider} –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ`);
  };
  console.log("isLoading:", isLoading);


  return (
    <div className="auth-page">
      <div className="auth-box">
        {!mode ? (
          <>
            <h2>–î–æ—Å—Ç—É–ø –∫ –º–∏–ª–ª–∏–æ–Ω–∞–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π</h2>
            <p>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∑–∞ 10 —Å–µ–∫—É–Ω–¥</p>

            <button className="google-btn" onClick={() => handleSocialLogin("Google")} disabled={isLoading}>
              {isLoading ? "–ó–∞–≥—Ä—É–∑–∫–∞..." : "–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google"}
            </button>

            <button className="apple-btn" onClick={() => handleSocialLogin("Apple")} disabled={isLoading}>
              {isLoading ? "–ó–∞–≥—Ä—É–∑–∫–∞..." : "–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Apple"}
            </button>

            <div className="or">–ò–õ–ò</div>

            <button className="email-btn" onClick={() => setMode("login")} disabled={isLoading}>–í–æ–π—Ç–∏</button>
            <button className="email-btn" onClick={() => setMode("signup")} disabled={isLoading}>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</button>
          </>
        ) : (
          <form onSubmit={handleAuth} className="auth-form">
            <h3>{mode === "login" ? "–í—Ö–æ–¥" : "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"}</h3>

            <input type="email" placeholder="Email" value={email} onChange={(e) => setEmail(e.target.value)} required disabled={isLoading} />
            <input type="password" placeholder="–ü–∞—Ä–æ–ª—å" value={password} onChange={(e) => setPassword(e.target.value)} required disabled={isLoading} />

            {mode === "signup" && (
              <>
                <input type="password" placeholder="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required disabled={isLoading} />
                <input type="text" placeholder="–ù–∏–∫–Ω–µ–π–º" value={nickname} onChange={(e) => setNickname(e.target.value)} required disabled={isLoading} />
                <div className="avatar-upload">
                  <div className="avatar-preview">
                    {avatar ? <img src={URL.createObjectURL(avatar)} alt="Preview" /> : <span>üë§</span>}
                  </div>
                  <label>
                    <input type="file" accept="image/*" onChange={(e) => setAvatar(e.target.files[0])} disabled={isLoading} className="file-input" />
                    <span className="upload-btn">{avatar ? "–ò–∑–º–µ–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä" : "–í—ã–±—Ä–∞—Ç—å –∞–≤–∞—Ç–∞—Ä"}</span>
                  </label>
                </div>
              </>
            )}

            <button type="submit" className="submit-btn" disabled={isLoading}>
              {isLoading ? (
                <div className="spinner" />
                ) : (mode === "login" ? "–í–æ–π—Ç–∏" : "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")}
            </button>



            <button type="button" onClick={() => { setMode(null); setAvatar(null); }} disabled={isLoading} className="back-btn">‚Üê –ù–∞–∑–∞–¥</button>
          </form>
        )}
      </div>

      <div className="auth-image">
        <img src="https://jewish-museum.ru/upload/iblock/117/86erg2mj7am6ctfxq5bl0a91uak6ema0.jpg" alt="–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–æ–Ω" />
      </div>
    </div>
  );
};

export default AuthPage;
